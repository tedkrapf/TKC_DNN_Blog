#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Techemistry.TKC_DnnBlog
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Dnn9DevDb")]
	public partial class BlogDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBlog_Blog(Blog_Blog instance);
    partial void UpdateBlog_Blog(Blog_Blog instance);
    partial void DeleteBlog_Blog(Blog_Blog instance);
    partial void InsertBlog_Tag(Blog_Tag instance);
    partial void UpdateBlog_Tag(Blog_Tag instance);
    partial void DeleteBlog_Tag(Blog_Tag instance);
    partial void InsertBlog_Category(Blog_Category instance);
    partial void UpdateBlog_Category(Blog_Category instance);
    partial void DeleteBlog_Category(Blog_Category instance);
    partial void InsertBlog_Comment(Blog_Comment instance);
    partial void UpdateBlog_Comment(Blog_Comment instance);
    partial void DeleteBlog_Comment(Blog_Comment instance);
    partial void InsertBlog_Entry(Blog_Entry instance);
    partial void UpdateBlog_Entry(Blog_Entry instance);
    partial void DeleteBlog_Entry(Blog_Entry instance);
    partial void InsertBlog_Entry_Category(Blog_Entry_Category instance);
    partial void UpdateBlog_Entry_Category(Blog_Entry_Category instance);
    partial void DeleteBlog_Entry_Category(Blog_Entry_Category instance);
    partial void InsertBlog_Entry_Tag(Blog_Entry_Tag instance);
    partial void UpdateBlog_Entry_Tag(Blog_Entry_Tag instance);
    partial void DeleteBlog_Entry_Tag(Blog_Entry_Tag instance);
    partial void InsertBlog_Setting(Blog_Setting instance);
    partial void UpdateBlog_Setting(Blog_Setting instance);
    partial void DeleteBlog_Setting(Blog_Setting instance);
    #endregion
		
		public BlogDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SiteSqlServer"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Blog_Blog> Blog_Blogs
		{
			get
			{
				return this.GetTable<Blog_Blog>();
			}
		}
		
		public System.Data.Linq.Table<Blog_Tag> Blog_Tags
		{
			get
			{
				return this.GetTable<Blog_Tag>();
			}
		}
		
		public System.Data.Linq.Table<Blog_Category> Blog_Categories
		{
			get
			{
				return this.GetTable<Blog_Category>();
			}
		}
		
		public System.Data.Linq.Table<Blog_Comment> Blog_Comments
		{
			get
			{
				return this.GetTable<Blog_Comment>();
			}
		}
		
		public System.Data.Linq.Table<Blog_Entry> Blog_Entries
		{
			get
			{
				return this.GetTable<Blog_Entry>();
			}
		}
		
		public System.Data.Linq.Table<Blog_Entry_Category> Blog_Entry_Categories
		{
			get
			{
				return this.GetTable<Blog_Entry_Category>();
			}
		}
		
		public System.Data.Linq.Table<Blog_Entry_Tag> Blog_Entry_Tags
		{
			get
			{
				return this.GetTable<Blog_Entry_Tag>();
			}
		}
		
		public System.Data.Linq.Table<Blog_MetaWeblogData> Blog_MetaWeblogDatas
		{
			get
			{
				return this.GetTable<Blog_MetaWeblogData>();
			}
		}
		
		public System.Data.Linq.Table<Blog_Setting> Blog_Settings
		{
			get
			{
				return this.GetTable<Blog_Setting>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog_Blogs")]
	public partial class Blog_Blog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalID;
		
		private int _BlogID;
		
		private int _UserID;
		
		private string _Title;
		
		private string _Description;
		
		private bool _Public;
		
		private bool _AllowComments;
		
		private bool _AllowAnonymous;
		
		private System.Nullable<System.DateTime> _LastEntry;
		
		private System.DateTime _Created;
		
		private bool _ShowFullName;
		
		private string _DateFormat;
		
		private string _Culture;
		
		private int _TimeZone;
		
		private System.Nullable<int> _ParentBlogID;
		
		private bool _Syndicated;
		
		private bool _SyndicateIndependant;
		
		private string _SyndicationURL;
		
		private string _SyndicationEmail;
		
		private System.Nullable<bool> _EmailNotification;
		
		private System.Nullable<bool> _AllowTrackbacks;
		
		private System.Nullable<bool> _AutoTrackback;
		
		private System.Nullable<bool> _MustApproveComments;
		
		private System.Nullable<bool> _MustApproveAnonymous;
		
		private System.Nullable<bool> _MustApproveTrackbacks;
		
		private System.Nullable<bool> _UseCaptcha;
		
		private EntitySet<Blog_Entry> _Blog_Entries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnBlogIDChanging(int value);
    partial void OnBlogIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPublicChanging(bool value);
    partial void OnPublicChanged();
    partial void OnAllowCommentsChanging(bool value);
    partial void OnAllowCommentsChanged();
    partial void OnAllowAnonymousChanging(bool value);
    partial void OnAllowAnonymousChanged();
    partial void OnLastEntryChanging(System.Nullable<System.DateTime> value);
    partial void OnLastEntryChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnShowFullNameChanging(bool value);
    partial void OnShowFullNameChanged();
    partial void OnDateFormatChanging(string value);
    partial void OnDateFormatChanged();
    partial void OnCultureChanging(string value);
    partial void OnCultureChanged();
    partial void OnTimeZoneChanging(int value);
    partial void OnTimeZoneChanged();
    partial void OnParentBlogIDChanging(System.Nullable<int> value);
    partial void OnParentBlogIDChanged();
    partial void OnSyndicatedChanging(bool value);
    partial void OnSyndicatedChanged();
    partial void OnSyndicateIndependantChanging(bool value);
    partial void OnSyndicateIndependantChanged();
    partial void OnSyndicationURLChanging(string value);
    partial void OnSyndicationURLChanged();
    partial void OnSyndicationEmailChanging(string value);
    partial void OnSyndicationEmailChanged();
    partial void OnEmailNotificationChanging(System.Nullable<bool> value);
    partial void OnEmailNotificationChanged();
    partial void OnAllowTrackbacksChanging(System.Nullable<bool> value);
    partial void OnAllowTrackbacksChanged();
    partial void OnAutoTrackbackChanging(System.Nullable<bool> value);
    partial void OnAutoTrackbackChanged();
    partial void OnMustApproveCommentsChanging(System.Nullable<bool> value);
    partial void OnMustApproveCommentsChanged();
    partial void OnMustApproveAnonymousChanging(System.Nullable<bool> value);
    partial void OnMustApproveAnonymousChanged();
    partial void OnMustApproveTrackbacksChanging(System.Nullable<bool> value);
    partial void OnMustApproveTrackbacksChanged();
    partial void OnUseCaptchaChanging(System.Nullable<bool> value);
    partial void OnUseCaptchaChanged();
    #endregion
		
		public Blog_Blog()
		{
			this._Blog_Entries = new EntitySet<Blog_Entry>(new Action<Blog_Entry>(this.attach_Blog_Entries), new Action<Blog_Entry>(this.detach_Blog_Entries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BlogID
		{
			get
			{
				return this._BlogID;
			}
			set
			{
				if ((this._BlogID != value))
				{
					this.OnBlogIDChanging(value);
					this.SendPropertyChanging();
					this._BlogID = value;
					this.SendPropertyChanged("BlogID");
					this.OnBlogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1024)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Public]", Storage="_Public", DbType="Bit NOT NULL")]
		public bool Public
		{
			get
			{
				return this._Public;
			}
			set
			{
				if ((this._Public != value))
				{
					this.OnPublicChanging(value);
					this.SendPropertyChanging();
					this._Public = value;
					this.SendPropertyChanged("Public");
					this.OnPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowComments", DbType="Bit NOT NULL")]
		public bool AllowComments
		{
			get
			{
				return this._AllowComments;
			}
			set
			{
				if ((this._AllowComments != value))
				{
					this.OnAllowCommentsChanging(value);
					this.SendPropertyChanging();
					this._AllowComments = value;
					this.SendPropertyChanged("AllowComments");
					this.OnAllowCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowAnonymous", DbType="Bit NOT NULL")]
		public bool AllowAnonymous
		{
			get
			{
				return this._AllowAnonymous;
			}
			set
			{
				if ((this._AllowAnonymous != value))
				{
					this.OnAllowAnonymousChanging(value);
					this.SendPropertyChanging();
					this._AllowAnonymous = value;
					this.SendPropertyChanged("AllowAnonymous");
					this.OnAllowAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEntry", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastEntry
		{
			get
			{
				return this._LastEntry;
			}
			set
			{
				if ((this._LastEntry != value))
				{
					this.OnLastEntryChanging(value);
					this.SendPropertyChanging();
					this._LastEntry = value;
					this.SendPropertyChanged("LastEntry");
					this.OnLastEntryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowFullName", DbType="Bit NOT NULL")]
		public bool ShowFullName
		{
			get
			{
				return this._ShowFullName;
			}
			set
			{
				if ((this._ShowFullName != value))
				{
					this.OnShowFullNameChanging(value);
					this.SendPropertyChanging();
					this._ShowFullName = value;
					this.SendPropertyChanged("ShowFullName");
					this.OnShowFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFormat", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DateFormat
		{
			get
			{
				return this._DateFormat;
			}
			set
			{
				if ((this._DateFormat != value))
				{
					this.OnDateFormatChanging(value);
					this.SendPropertyChanging();
					this._DateFormat = value;
					this.SendPropertyChanged("DateFormat");
					this.OnDateFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Culture", DbType="NVarChar(10)")]
		public string Culture
		{
			get
			{
				return this._Culture;
			}
			set
			{
				if ((this._Culture != value))
				{
					this.OnCultureChanging(value);
					this.SendPropertyChanging();
					this._Culture = value;
					this.SendPropertyChanged("Culture");
					this.OnCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZone", DbType="Int NOT NULL")]
		public int TimeZone
		{
			get
			{
				return this._TimeZone;
			}
			set
			{
				if ((this._TimeZone != value))
				{
					this.OnTimeZoneChanging(value);
					this.SendPropertyChanging();
					this._TimeZone = value;
					this.SendPropertyChanged("TimeZone");
					this.OnTimeZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentBlogID", DbType="Int")]
		public System.Nullable<int> ParentBlogID
		{
			get
			{
				return this._ParentBlogID;
			}
			set
			{
				if ((this._ParentBlogID != value))
				{
					this.OnParentBlogIDChanging(value);
					this.SendPropertyChanging();
					this._ParentBlogID = value;
					this.SendPropertyChanged("ParentBlogID");
					this.OnParentBlogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Syndicated", DbType="Bit NOT NULL")]
		public bool Syndicated
		{
			get
			{
				return this._Syndicated;
			}
			set
			{
				if ((this._Syndicated != value))
				{
					this.OnSyndicatedChanging(value);
					this.SendPropertyChanging();
					this._Syndicated = value;
					this.SendPropertyChanged("Syndicated");
					this.OnSyndicatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyndicateIndependant", DbType="Bit NOT NULL")]
		public bool SyndicateIndependant
		{
			get
			{
				return this._SyndicateIndependant;
			}
			set
			{
				if ((this._SyndicateIndependant != value))
				{
					this.OnSyndicateIndependantChanging(value);
					this.SendPropertyChanging();
					this._SyndicateIndependant = value;
					this.SendPropertyChanged("SyndicateIndependant");
					this.OnSyndicateIndependantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyndicationURL", DbType="NVarChar(1024)")]
		public string SyndicationURL
		{
			get
			{
				return this._SyndicationURL;
			}
			set
			{
				if ((this._SyndicationURL != value))
				{
					this.OnSyndicationURLChanging(value);
					this.SendPropertyChanging();
					this._SyndicationURL = value;
					this.SendPropertyChanged("SyndicationURL");
					this.OnSyndicationURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyndicationEmail", DbType="NVarChar(255)")]
		public string SyndicationEmail
		{
			get
			{
				return this._SyndicationEmail;
			}
			set
			{
				if ((this._SyndicationEmail != value))
				{
					this.OnSyndicationEmailChanging(value);
					this.SendPropertyChanging();
					this._SyndicationEmail = value;
					this.SendPropertyChanged("SyndicationEmail");
					this.OnSyndicationEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailNotification", DbType="Bit")]
		public System.Nullable<bool> EmailNotification
		{
			get
			{
				return this._EmailNotification;
			}
			set
			{
				if ((this._EmailNotification != value))
				{
					this.OnEmailNotificationChanging(value);
					this.SendPropertyChanging();
					this._EmailNotification = value;
					this.SendPropertyChanged("EmailNotification");
					this.OnEmailNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowTrackbacks", DbType="Bit")]
		public System.Nullable<bool> AllowTrackbacks
		{
			get
			{
				return this._AllowTrackbacks;
			}
			set
			{
				if ((this._AllowTrackbacks != value))
				{
					this.OnAllowTrackbacksChanging(value);
					this.SendPropertyChanging();
					this._AllowTrackbacks = value;
					this.SendPropertyChanged("AllowTrackbacks");
					this.OnAllowTrackbacksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoTrackback", DbType="Bit")]
		public System.Nullable<bool> AutoTrackback
		{
			get
			{
				return this._AutoTrackback;
			}
			set
			{
				if ((this._AutoTrackback != value))
				{
					this.OnAutoTrackbackChanging(value);
					this.SendPropertyChanging();
					this._AutoTrackback = value;
					this.SendPropertyChanged("AutoTrackback");
					this.OnAutoTrackbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MustApproveComments", DbType="Bit")]
		public System.Nullable<bool> MustApproveComments
		{
			get
			{
				return this._MustApproveComments;
			}
			set
			{
				if ((this._MustApproveComments != value))
				{
					this.OnMustApproveCommentsChanging(value);
					this.SendPropertyChanging();
					this._MustApproveComments = value;
					this.SendPropertyChanged("MustApproveComments");
					this.OnMustApproveCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MustApproveAnonymous", DbType="Bit")]
		public System.Nullable<bool> MustApproveAnonymous
		{
			get
			{
				return this._MustApproveAnonymous;
			}
			set
			{
				if ((this._MustApproveAnonymous != value))
				{
					this.OnMustApproveAnonymousChanging(value);
					this.SendPropertyChanging();
					this._MustApproveAnonymous = value;
					this.SendPropertyChanged("MustApproveAnonymous");
					this.OnMustApproveAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MustApproveTrackbacks", DbType="Bit")]
		public System.Nullable<bool> MustApproveTrackbacks
		{
			get
			{
				return this._MustApproveTrackbacks;
			}
			set
			{
				if ((this._MustApproveTrackbacks != value))
				{
					this.OnMustApproveTrackbacksChanging(value);
					this.SendPropertyChanging();
					this._MustApproveTrackbacks = value;
					this.SendPropertyChanged("MustApproveTrackbacks");
					this.OnMustApproveTrackbacksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCaptcha", DbType="Bit")]
		public System.Nullable<bool> UseCaptcha
		{
			get
			{
				return this._UseCaptcha;
			}
			set
			{
				if ((this._UseCaptcha != value))
				{
					this.OnUseCaptchaChanging(value);
					this.SendPropertyChanging();
					this._UseCaptcha = value;
					this.SendPropertyChanged("UseCaptcha");
					this.OnUseCaptchaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Blog_Blog_Entry", Storage="_Blog_Entries", ThisKey="BlogID", OtherKey="BlogID")]
		public EntitySet<Blog_Entry> Blog_Entries
		{
			get
			{
				return this._Blog_Entries;
			}
			set
			{
				this._Blog_Entries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Blog_Entries(Blog_Entry entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Blog = this;
		}
		
		private void detach_Blog_Entries(Blog_Entry entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Blog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog_Tags")]
	public partial class Blog_Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TagID;
		
		private string _Tag;
		
		private string _Slug;
		
		private bool _Active;
		
		private int _PortalID;
		
		private EntitySet<Blog_Entry_Tag> _Blog_Entry_Tags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTagIDChanging(int value);
    partial void OnTagIDChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    #endregion
		
		public Blog_Tag()
		{
			this._Blog_Entry_Tags = new EntitySet<Blog_Entry_Tag>(new Action<Blog_Entry_Tag>(this.attach_Blog_Entry_Tags), new Action<Blog_Entry_Tag>(this.detach_Blog_Entry_Tags));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slug", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Tag_Blog_Entry_Tag", Storage="_Blog_Entry_Tags", ThisKey="TagID", OtherKey="TagID")]
		public EntitySet<Blog_Entry_Tag> Blog_Entry_Tags
		{
			get
			{
				return this._Blog_Entry_Tags;
			}
			set
			{
				this._Blog_Entry_Tags.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Blog_Entry_Tags(Blog_Entry_Tag entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Tag = this;
		}
		
		private void detach_Blog_Entry_Tags(Blog_Entry_Tag entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Tag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog_Categories")]
	public partial class Blog_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatID;
		
		private string _Category;
		
		private string _Slug;
		
		private System.Nullable<int> _ParentID;
		
		private int _PortalID;
		
		private EntitySet<Blog_Entry_Category> _Blog_Entry_Categories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatIDChanging(int value);
    partial void OnCatIDChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    #endregion
		
		public Blog_Category()
		{
			this._Blog_Entry_Categories = new EntitySet<Blog_Entry_Category>(new Action<Blog_Entry_Category>(this.attach_Blog_Entry_Categories), new Action<Blog_Entry_Category>(this.detach_Blog_Entry_Categories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slug", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Category_Blog_Entry_Category", Storage="_Blog_Entry_Categories", ThisKey="CatID", OtherKey="CatID")]
		public EntitySet<Blog_Entry_Category> Blog_Entry_Categories
		{
			get
			{
				return this._Blog_Entry_Categories;
			}
			set
			{
				this._Blog_Entry_Categories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Blog_Entry_Categories(Blog_Entry_Category entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Category = this;
		}
		
		private void detach_Blog_Entry_Categories(Blog_Entry_Category entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog_Comments")]
	public partial class Blog_Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommentID;
		
		private int _EntryID;
		
		private System.Nullable<int> _UserID;
		
		private string _Comment;
		
		private System.DateTime _AddedDate;
		
		private string _Title;
		
		private System.Nullable<bool> _Approved;
		
		private string _Author;
		
		private string _Website;
		
		private string _Email;
		
		private EntityRef<Blog_Entry> _Blog_Entry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommentIDChanging(int value);
    partial void OnCommentIDChanged();
    partial void OnEntryIDChanging(int value);
    partial void OnEntryIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnAddedDateChanging(System.DateTime value);
    partial void OnAddedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnApprovedChanging(System.Nullable<bool> value);
    partial void OnApprovedChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Blog_Comment()
		{
			this._Blog_Entry = default(EntityRef<Blog_Entry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", DbType="Int NOT NULL")]
		public int EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					if (this._Blog_Entry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryIDChanging(value);
					this.SendPropertyChanging();
					this._EntryID = value;
					this.SendPropertyChanged("EntryID");
					this.OnEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedDate", DbType="DateTime NOT NULL")]
		public System.DateTime AddedDate
		{
			get
			{
				return this._AddedDate;
			}
			set
			{
				if ((this._AddedDate != value))
				{
					this.OnAddedDateChanging(value);
					this.SendPropertyChanging();
					this._AddedDate = value;
					this.SendPropertyChanged("AddedDate");
					this.OnAddedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit")]
		public System.Nullable<bool> Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(50)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(255)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Entry_Blog_Comment", Storage="_Blog_Entry", ThisKey="EntryID", OtherKey="EntryID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Blog_Entry Blog_Entry
		{
			get
			{
				return this._Blog_Entry.Entity;
			}
			set
			{
				Blog_Entry previousValue = this._Blog_Entry.Entity;
				if (((previousValue != value) 
							|| (this._Blog_Entry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Blog_Entry.Entity = null;
						previousValue.Blog_Comments.Remove(this);
					}
					this._Blog_Entry.Entity = value;
					if ((value != null))
					{
						value.Blog_Comments.Add(this);
						this._EntryID = value.EntryID;
					}
					else
					{
						this._EntryID = default(int);
					}
					this.SendPropertyChanged("Blog_Entry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog_Entries")]
	public partial class Blog_Entry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlogID;
		
		private int _EntryID;
		
		private string _Title;
		
		private string _Entry;
		
		private System.DateTime _AddedDate;
		
		private bool _Published;
		
		private string _Description;
		
		private System.Nullable<bool> _AllowComments;
		
		private bool _DisplayCopyright;
		
		private string _Copyright;
		
		private string _PermaLink;
		
		private EntitySet<Blog_Comment> _Blog_Comments;
		
		private EntitySet<Blog_Entry_Category> _Blog_Entry_Categories;
		
		private EntitySet<Blog_Entry_Tag> _Blog_Entry_Tags;
		
		private EntityRef<Blog_Blog> _Blog_Blog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogIDChanging(int value);
    partial void OnBlogIDChanged();
    partial void OnEntryIDChanging(int value);
    partial void OnEntryIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnEntryChanging(string value);
    partial void OnEntryChanged();
    partial void OnAddedDateChanging(System.DateTime value);
    partial void OnAddedDateChanged();
    partial void OnPublishedChanging(bool value);
    partial void OnPublishedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAllowCommentsChanging(System.Nullable<bool> value);
    partial void OnAllowCommentsChanged();
    partial void OnDisplayCopyrightChanging(bool value);
    partial void OnDisplayCopyrightChanged();
    partial void OnCopyrightChanging(string value);
    partial void OnCopyrightChanged();
    partial void OnPermaLinkChanging(string value);
    partial void OnPermaLinkChanged();
    #endregion
		
		public Blog_Entry()
		{
			this._Blog_Comments = new EntitySet<Blog_Comment>(new Action<Blog_Comment>(this.attach_Blog_Comments), new Action<Blog_Comment>(this.detach_Blog_Comments));
			this._Blog_Entry_Categories = new EntitySet<Blog_Entry_Category>(new Action<Blog_Entry_Category>(this.attach_Blog_Entry_Categories), new Action<Blog_Entry_Category>(this.detach_Blog_Entry_Categories));
			this._Blog_Entry_Tags = new EntitySet<Blog_Entry_Tag>(new Action<Blog_Entry_Tag>(this.attach_Blog_Entry_Tags), new Action<Blog_Entry_Tag>(this.detach_Blog_Entry_Tags));
			this._Blog_Blog = default(EntityRef<Blog_Blog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogID", DbType="Int NOT NULL")]
		public int BlogID
		{
			get
			{
				return this._BlogID;
			}
			set
			{
				if ((this._BlogID != value))
				{
					if (this._Blog_Blog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlogIDChanging(value);
					this.SendPropertyChanging();
					this._BlogID = value;
					this.SendPropertyChanged("BlogID");
					this.OnBlogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					this.OnEntryIDChanging(value);
					this.SendPropertyChanging();
					this._EntryID = value;
					this.SendPropertyChanged("EntryID");
					this.OnEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entry", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Entry
		{
			get
			{
				return this._Entry;
			}
			set
			{
				if ((this._Entry != value))
				{
					this.OnEntryChanging(value);
					this.SendPropertyChanging();
					this._Entry = value;
					this.SendPropertyChanged("Entry");
					this.OnEntryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedDate", DbType="DateTime NOT NULL")]
		public System.DateTime AddedDate
		{
			get
			{
				return this._AddedDate;
			}
			set
			{
				if ((this._AddedDate != value))
				{
					this.OnAddedDateChanging(value);
					this.SendPropertyChanging();
					this._AddedDate = value;
					this.SendPropertyChanged("AddedDate");
					this.OnAddedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Published", DbType="Bit NOT NULL")]
		public bool Published
		{
			get
			{
				return this._Published;
			}
			set
			{
				if ((this._Published != value))
				{
					this.OnPublishedChanging(value);
					this.SendPropertyChanging();
					this._Published = value;
					this.SendPropertyChanged("Published");
					this.OnPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowComments", DbType="Bit")]
		public System.Nullable<bool> AllowComments
		{
			get
			{
				return this._AllowComments;
			}
			set
			{
				if ((this._AllowComments != value))
				{
					this.OnAllowCommentsChanging(value);
					this.SendPropertyChanging();
					this._AllowComments = value;
					this.SendPropertyChanged("AllowComments");
					this.OnAllowCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCopyright", DbType="Bit NOT NULL")]
		public bool DisplayCopyright
		{
			get
			{
				return this._DisplayCopyright;
			}
			set
			{
				if ((this._DisplayCopyright != value))
				{
					this.OnDisplayCopyrightChanging(value);
					this.SendPropertyChanging();
					this._DisplayCopyright = value;
					this.SendPropertyChanged("DisplayCopyright");
					this.OnDisplayCopyrightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Copyright", DbType="NVarChar(255)")]
		public string Copyright
		{
			get
			{
				return this._Copyright;
			}
			set
			{
				if ((this._Copyright != value))
				{
					this.OnCopyrightChanging(value);
					this.SendPropertyChanging();
					this._Copyright = value;
					this.SendPropertyChanged("Copyright");
					this.OnCopyrightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermaLink", DbType="NVarChar(1024)")]
		public string PermaLink
		{
			get
			{
				return this._PermaLink;
			}
			set
			{
				if ((this._PermaLink != value))
				{
					this.OnPermaLinkChanging(value);
					this.SendPropertyChanging();
					this._PermaLink = value;
					this.SendPropertyChanged("PermaLink");
					this.OnPermaLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Entry_Blog_Comment", Storage="_Blog_Comments", ThisKey="EntryID", OtherKey="EntryID")]
		public EntitySet<Blog_Comment> Blog_Comments
		{
			get
			{
				return this._Blog_Comments;
			}
			set
			{
				this._Blog_Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Entry_Blog_Entry_Category", Storage="_Blog_Entry_Categories", ThisKey="EntryID", OtherKey="EntryID")]
		public EntitySet<Blog_Entry_Category> Blog_Entry_Categories
		{
			get
			{
				return this._Blog_Entry_Categories;
			}
			set
			{
				this._Blog_Entry_Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Entry_Blog_Entry_Tag", Storage="_Blog_Entry_Tags", ThisKey="EntryID", OtherKey="EntryID")]
		public EntitySet<Blog_Entry_Tag> Blog_Entry_Tags
		{
			get
			{
				return this._Blog_Entry_Tags;
			}
			set
			{
				this._Blog_Entry_Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Blog_Blog_Entry", Storage="_Blog_Blog", ThisKey="BlogID", OtherKey="BlogID", IsForeignKey=true)]
		public Blog_Blog Blog_Blog
		{
			get
			{
				return this._Blog_Blog.Entity;
			}
			set
			{
				Blog_Blog previousValue = this._Blog_Blog.Entity;
				if (((previousValue != value) 
							|| (this._Blog_Blog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Blog_Blog.Entity = null;
						previousValue.Blog_Entries.Remove(this);
					}
					this._Blog_Blog.Entity = value;
					if ((value != null))
					{
						value.Blog_Entries.Add(this);
						this._BlogID = value.BlogID;
					}
					else
					{
						this._BlogID = default(int);
					}
					this.SendPropertyChanged("Blog_Blog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Blog_Comments(Blog_Comment entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Entry = this;
		}
		
		private void detach_Blog_Comments(Blog_Comment entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Entry = null;
		}
		
		private void attach_Blog_Entry_Categories(Blog_Entry_Category entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Entry = this;
		}
		
		private void detach_Blog_Entry_Categories(Blog_Entry_Category entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Entry = null;
		}
		
		private void attach_Blog_Entry_Tags(Blog_Entry_Tag entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Entry = this;
		}
		
		private void detach_Blog_Entry_Tags(Blog_Entry_Tag entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Entry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog_Entry_Categories")]
	public partial class Blog_Entry_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntryCatID;
		
		private System.Nullable<int> _EntryID;
		
		private System.Nullable<int> _CatID;
		
		private EntityRef<Blog_Category> _Blog_Category;
		
		private EntityRef<Blog_Entry> _Blog_Entry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntryCatIDChanging(int value);
    partial void OnEntryCatIDChanged();
    partial void OnEntryIDChanging(System.Nullable<int> value);
    partial void OnEntryIDChanged();
    partial void OnCatIDChanging(System.Nullable<int> value);
    partial void OnCatIDChanged();
    #endregion
		
		public Blog_Entry_Category()
		{
			this._Blog_Category = default(EntityRef<Blog_Category>);
			this._Blog_Entry = default(EntityRef<Blog_Entry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryCatID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntryCatID
		{
			get
			{
				return this._EntryCatID;
			}
			set
			{
				if ((this._EntryCatID != value))
				{
					this.OnEntryCatIDChanging(value);
					this.SendPropertyChanging();
					this._EntryCatID = value;
					this.SendPropertyChanged("EntryCatID");
					this.OnEntryCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", DbType="Int")]
		public System.Nullable<int> EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					if (this._Blog_Entry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryIDChanging(value);
					this.SendPropertyChanging();
					this._EntryID = value;
					this.SendPropertyChanged("EntryID");
					this.OnEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", DbType="Int")]
		public System.Nullable<int> CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					if (this._Blog_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Category_Blog_Entry_Category", Storage="_Blog_Category", ThisKey="CatID", OtherKey="CatID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Blog_Category Blog_Category
		{
			get
			{
				return this._Blog_Category.Entity;
			}
			set
			{
				Blog_Category previousValue = this._Blog_Category.Entity;
				if (((previousValue != value) 
							|| (this._Blog_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Blog_Category.Entity = null;
						previousValue.Blog_Entry_Categories.Remove(this);
					}
					this._Blog_Category.Entity = value;
					if ((value != null))
					{
						value.Blog_Entry_Categories.Add(this);
						this._CatID = value.CatID;
					}
					else
					{
						this._CatID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Blog_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Entry_Blog_Entry_Category", Storage="_Blog_Entry", ThisKey="EntryID", OtherKey="EntryID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Blog_Entry Blog_Entry
		{
			get
			{
				return this._Blog_Entry.Entity;
			}
			set
			{
				Blog_Entry previousValue = this._Blog_Entry.Entity;
				if (((previousValue != value) 
							|| (this._Blog_Entry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Blog_Entry.Entity = null;
						previousValue.Blog_Entry_Categories.Remove(this);
					}
					this._Blog_Entry.Entity = value;
					if ((value != null))
					{
						value.Blog_Entry_Categories.Add(this);
						this._EntryID = value.EntryID;
					}
					else
					{
						this._EntryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Blog_Entry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog_Entry_Tags")]
	public partial class Blog_Entry_Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntryTagID;
		
		private int _EntryID;
		
		private int _TagID;
		
		private EntityRef<Blog_Entry> _Blog_Entry;
		
		private EntityRef<Blog_Tag> _Blog_Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntryTagIDChanging(int value);
    partial void OnEntryTagIDChanged();
    partial void OnEntryIDChanging(int value);
    partial void OnEntryIDChanged();
    partial void OnTagIDChanging(int value);
    partial void OnTagIDChanged();
    #endregion
		
		public Blog_Entry_Tag()
		{
			this._Blog_Entry = default(EntityRef<Blog_Entry>);
			this._Blog_Tag = default(EntityRef<Blog_Tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryTagID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntryTagID
		{
			get
			{
				return this._EntryTagID;
			}
			set
			{
				if ((this._EntryTagID != value))
				{
					this.OnEntryTagIDChanging(value);
					this.SendPropertyChanging();
					this._EntryTagID = value;
					this.SendPropertyChanged("EntryTagID");
					this.OnEntryTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", DbType="Int NOT NULL")]
		public int EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					if (this._Blog_Entry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryIDChanging(value);
					this.SendPropertyChanging();
					this._EntryID = value;
					this.SendPropertyChanged("EntryID");
					this.OnEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", DbType="Int NOT NULL")]
		public int TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					if (this._Blog_Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Entry_Blog_Entry_Tag", Storage="_Blog_Entry", ThisKey="EntryID", OtherKey="EntryID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Blog_Entry Blog_Entry
		{
			get
			{
				return this._Blog_Entry.Entity;
			}
			set
			{
				Blog_Entry previousValue = this._Blog_Entry.Entity;
				if (((previousValue != value) 
							|| (this._Blog_Entry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Blog_Entry.Entity = null;
						previousValue.Blog_Entry_Tags.Remove(this);
					}
					this._Blog_Entry.Entity = value;
					if ((value != null))
					{
						value.Blog_Entry_Tags.Add(this);
						this._EntryID = value.EntryID;
					}
					else
					{
						this._EntryID = default(int);
					}
					this.SendPropertyChanged("Blog_Entry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Tag_Blog_Entry_Tag", Storage="_Blog_Tag", ThisKey="TagID", OtherKey="TagID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Blog_Tag Blog_Tag
		{
			get
			{
				return this._Blog_Tag.Entity;
			}
			set
			{
				Blog_Tag previousValue = this._Blog_Tag.Entity;
				if (((previousValue != value) 
							|| (this._Blog_Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Blog_Tag.Entity = null;
						previousValue.Blog_Entry_Tags.Remove(this);
					}
					this._Blog_Tag.Entity = value;
					if ((value != null))
					{
						value.Blog_Entry_Tags.Add(this);
						this._TagID = value.TagID;
					}
					else
					{
						this._TagID = default(int);
					}
					this.SendPropertyChanged("Blog_Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog_MetaWeblogData")]
	public partial class Blog_MetaWeblogData
	{
		
		private string _TempInstallUrl;
		
		public Blog_MetaWeblogData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempInstallUrl", DbType="NVarChar(500)")]
		public string TempInstallUrl
		{
			get
			{
				return this._TempInstallUrl;
			}
			set
			{
				if ((this._TempInstallUrl != value))
				{
					this._TempInstallUrl = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog_Settings")]
	public partial class Blog_Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalID;
		
		private string _Key;
		
		private string _Value;
		
		private int _TabID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    #endregion
		
		public Blog_Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
